# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  packages: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  #install dependecies
  pre-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: npm install
        run: npm install
#     - name: npm/yarn/pnpm install
#       # You may pin to the exact commit or the version.
#       # uses: Jaid/action-npm-install@9483da054882538350947c4147de4c8adbf0d597
#       uses: Jaid/action-npm-install@v1.2.4
#       with:
#         # NODE_ENV setting for installing execution (affects the amount of dependencies installed, but I would recommend keeping development in any case).
#         nodeEnv: poduction
#         # Can be "npm", "yarn", "pnpm" or "auto". "auto" will determine the package manager by looking into the repo's files. This is very accurate, so you normally don't want to change this.
#         packageManager: auto
#         # If true and node_modules folder already exists, this action will be skipped assuming npm install is not required.
#         skipIfNodeModulesExists: false
        #     - name: Install Dependencies
        #       run: npm install
  
  #pre-build
  pre-build:
    runs-on: ubuntu-latest
    needs: pre-install
    steps:
    - name: NX production build
      run: npm run build
  
  
  # Build job
  build:
    runs-on: ubuntu-latest
    needs: pre-build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./dist/crm-dashboard-test
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
